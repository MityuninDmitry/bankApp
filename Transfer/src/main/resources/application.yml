server:
  port: ${SERVER_PORT:8084}
spring:
  application:
    name: service-transfer
  config:
    import: "optional:consul:"
  cloud:
    consul:
      host: consul          # Адрес Consul (по умолчанию localhost)
      port: 8500               # Порт Consul (8500 по умолчанию)
      discovery:
        service-name: service-transfer  # Необязательно, по умолчанию берётся spring.application.name
      config:
        enabled: true            # Включаем Consul Config для внешней конфигурации
        data-key: data
        format: PROPERTIES
        prefix: config           # Префикс в KV-хранилище Consul (по умолчанию "config")
        defaultContext: application  # Контекст по умолчанию
  security:
    oauth2:
      client:
        registration:
          transfer-client:
            provider: spring
            client-id: transfer-service
            client-secret: transfer-secret
            authorization-grant-type: client_credentials
            scope: transfer
        provider:
          spring:
            token-uri: http://auth-service:9000/oauth2/token
service:
  url:
    gateway: TEST
  api:
    accounts: "/accounts"
    exchange: "/exchange"
    notifications: "/notifications"
    blocker: "/blocker"
client:
  registration:
    id: "transfer-client"

logging:
  level:
    io.github.resilience4j: DEBUG
    org.springframework.retry: DEBUG
    org.springframework.aop: DEBUG
    ru.mityunin: DEBUG

security:
  oauth2:
    enabled: true

resilience4j:
  enabled: true